import Head from 'next/head'
import { AiOutlinePlus } from "react-icons/ai";
import { useState } from 'react';
import { Modal } from 'react-daisyui'
import { getUID } from '../util/functions/helper';
import axios from 'axios'
import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";
import useSWR from 'swr'

const initialProject = {
  id: 0,
  type: 'task',
  projectName: '',
  startDate: new Date(),
  endDate: new Date(),
  progress: 0,
  isDisabled: true

}
const fetcher = async () => {
  const { data } = await axios.get('http://localhost:4000/projects')
  return data
}
export default function Home() {
  const [visible, setVisible] = useState(false)
  const [projectName, setProjectName] = useState('')
  const [startDate, setStartDate] = useState(new Date());
  const [endDate, setEndDate] = useState(new Date());
  const [budget, setBudget] = useState(0)
  const { data, error } = useSWR('/api/todos', fetcher, { refreshInterval: 1000 })


  function toggleVisible() {
    setVisible(prev => !prev)
  }
  function handleSubmit(e) {
    e.preventDefault()
    axios.post('http://localhost:4000/projects', {
      id: getUID(),
      type: 'task',
      projectName,
      budget,
      startDate,
      endDate,
      progress: 0,
      isDisabled: true
    }).then(() => console.log('data added to db successfully'))
    // console.log(`${projectName} ${startDate} ${endDate}`);


  }
  if (error) return <div>failed to load</div>
  if (!data) return <div>loading...</div>
  return (
    <div >
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <button onClick={toggleVisible}><AiOutlinePlus className='text-gray-600 text-5xl' /></button>
      <Modal open={visible} onClickBackdrop={toggleVisible}>
        <Modal.Header className="font-bold">
          Congratulations random Interner user!
        </Modal.Header>

        <Modal.Body>
          <form action="" className='flex flex-col gap-4' onSubmit={handleSubmit}>
            <div>
              <label htmlFor="projectName">Project Name</label>
              <input type="text" id='projectName' value={projectName} onChange={(e) => setProjectName(e.target.value)} />
            </div>
            <div>
              <label htmlFor="projectBudget">Project Budget</label>
              <input type="text" id='projecBudget' value={budget} onChange={(e) => setBudget(e.target.value)} />
            </div>
            <DatePicker
              selected={startDate}
              onChange={(date) => setStartDate(date)}
              selectsStart
              startDate={startDate}
              endDate={endDate}
            />
            <DatePicker
              selected={endDate}
              onChange={(date) => setEndDate(date)}
              selectsEnd
              startDate={startDate}
              endDate={endDate}
              minDate={startDate}
            />
            <button type='submit'>Submit</button>
          </form>
        </Modal.Body>
      </Modal>
      {data.map(item => <p key={item.id}>{item.projectName}</p>)}
    </div>
  )
}
